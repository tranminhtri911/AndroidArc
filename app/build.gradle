apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply from: '../autodimension.gradle'

def APP_ID = "n.com.myapplication"

android {

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "${APP_ID}"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true
    }

    flavorDimensions "stage", "mode"

    productFlavors {
        dev {
            dimension "stage"

            applicationIdSuffix = ".dev"
            manifestPlaceholders = [applicationName: "@string/app_name"]
            applicationVariants.all { variant -> appendVersionNameVersionCode(variant) }

            versionNameSuffix "-dev"
            applicationIdSuffix '.dev'
            resConfigs "en", "xxhdpi"
        }

        prod {
            dimension "mode"

            manifestPlaceholders = [applicationName: "@string/app_name"]
            applicationVariants.all { variant -> appendVersionNameVersionCode(variant) }
        }
    }

    buildTypes {

        debug {
            ext.enableCrashlytics = false
            buildConfigField "String", "BASE_URL", "\"https://api.github.com/\""
        }

        release {
            minifyEnabled true
            shrinkResources true

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    dataBinding {
        enabled = true
    }

    kapt {
        useBuildCache = true
    }

    kapt {
        mapDiagnosticLocations = true
    }

    // Parcelable ktx
    androidExtensions {
        experimental = true
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }

    lintOptions {
        disable 'MissingTranslation'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"

    //Data binding
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "com.android.databinding:compiler:$gradlePluginVersion"

    //App
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.percentlayout:percentlayout:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta2'
    implementation 'androidx.annotation:annotation:1.1.0'

    //Navigation
    implementation 'android.arch.navigation:navigation-fragment-ktx:1.0.0'
    implementation 'android.arch.navigation:navigation-ui-ktx:1.0.0'

    //Fragment
    implementation 'androidx.fragment:fragment-ktx:1.2.0-alpha02'

    //Room
    def room_version = "2.3.0"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    //Paging
    implementation "androidx.paging:paging-runtime:2.1.0"

    //Retrofit and OkHttp
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    implementation 'androidx.room:room-rxjava2:2.1.0'
    implementation 'com.squareup.okhttp3:okhttp:3.12.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.0'

    //RxJava, RxKotlin
    implementation 'io.reactivex.rxjava2:rxkotlin:2.3.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.4'

    //Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1'

    //Dagger
    def dagger_version = "2.38.1"
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation"com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    kapt 'com.github.bumptech.glide:compiler:4.8.0'

    implementation "com.google.code.findbugs:jsr305:3.0.2"

    //Ktx core
    implementation 'androidx.core:core-ktx:1.0.2'

    //Leak Canary
    implementation 'com.squareup.leakcanary:leakcanary-android:1.6.2'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

@SuppressWarnings("GroovyAssignabilityCheck")
def appendVersionNameVersionCode(variant) {
    variant.outputs.all { output ->
        def time = new Date().format("dd-MM-yyyy", TimeZone.getTimeZone("UTC"))
        outputFileName = "${variant.name}-${variant.versionName}-${time}.apk"
    }
}
